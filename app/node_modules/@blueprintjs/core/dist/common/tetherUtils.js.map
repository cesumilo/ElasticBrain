{"version":3,"sources":["../src/common/tetherUtils.ts"],"names":[],"mappings":"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","file":"common/tetherUtils.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\n// TODO: shim for new option added in Tether 1.4.0\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13142\ndeclare module \"tether\" {\n    interface ITetherOptions {\n        bodyElement?: HTMLElement;\n    }\n}\n\nimport * as Tether from \"tether\";\n\nimport { Position } from \"./position\";\n\nconst DEFAULT_CONSTRAINTS = {\n    attachment: \"together\",\n    to: \"scrollParent\",\n};\n\n// per https://github.com/HubSpot/tether/pull/204, Tether now exposes a `bodyElement` option that,\n// when present, gets the tethered element injected into *it* instead of into the document body.\n// but both approaches still cause React to freak out, because it loses its handle on the DOM\n// element. thus, we pass a fake HTML bodyElement to Tether, with a no-op `appendChild` function\n// (the only function the library uses from bodyElement).\nconst fakeHtmlElement = ({\n    appendChild : () => { /* No-op */ },\n} as any) as HTMLElement;\n\nexport interface ITetherConstraint {\n    attachment?: string;\n    outOfBoundsClass?: string;\n    pin?: boolean | string[];\n    pinnedClass?: string;\n    to?: string | HTMLElement | number[];\n}\n\n/** @internal */\nexport function createTetherOptions(element: Element,\n                                    target: Node,\n                                    position: Position,\n                                    useSmartPositioning: boolean,\n                                    constraints: ITetherConstraint[]) {\n    if (constraints == null && useSmartPositioning) {\n        constraints = [DEFAULT_CONSTRAINTS];\n    }\n\n    const options: Tether.ITetherOptions = {\n        attachment: getPopoverAttachment(position),\n        bodyElement: fakeHtmlElement,\n        classPrefix: \"pt-tether\",\n        constraints,\n        element,\n        target,\n        targetAttachment: getTargetAttachment(position),\n    };\n    return options;\n}\n\n/** @internal */\nexport function getTargetAttachment(position: Position) {\n    const attachments: {[p: number]: string} = {\n        [Position.TOP_LEFT]:     \"top left\",\n        [Position.TOP]:          \"top center\",\n        [Position.TOP_RIGHT]:    \"top right\",\n        [Position.RIGHT_TOP]:    \"top right\",\n        [Position.RIGHT]:        \"middle right\",\n        [Position.RIGHT_BOTTOM]: \"bottom right\",\n        [Position.BOTTOM_RIGHT]: \"bottom right\",\n        [Position.BOTTOM]:       \"bottom center\",\n        [Position.BOTTOM_LEFT]:  \"bottom left\",\n        [Position.LEFT_BOTTOM]:  \"bottom left\",\n        [Position.LEFT]:         \"middle left\",\n        [Position.LEFT_TOP]:     \"top left\",\n    };\n    return attachments[position];\n}\n\n/** @internal */\nexport function getPopoverAttachment(position: Position) {\n    const attachments: {[p: number]: string} = {\n        [Position.TOP_LEFT]:     \"bottom left\",\n        [Position.TOP]:          \"bottom center\",\n        [Position.TOP_RIGHT]:    \"bottom right\",\n        [Position.RIGHT_TOP]:    \"top left\",\n        [Position.RIGHT]:        \"middle left\",\n        [Position.RIGHT_BOTTOM]: \"bottom left\",\n        [Position.BOTTOM_RIGHT]: \"top right\",\n        [Position.BOTTOM]:       \"top center\",\n        [Position.BOTTOM_LEFT]:  \"top left\",\n        [Position.LEFT_BOTTOM]:  \"bottom right\",\n        [Position.LEFT]:         \"middle right\",\n        [Position.LEFT_TOP]:     \"top right\",\n    };\n    return attachments[position];\n}\n\n/** @internal */\nexport function getAttachmentClasses(position: Position) {\n    // this essentially reimplements the Tether logic for attachment classes so the same styles\n    // can be reused outside of Tether-based popovers.\n    return [\n        ...expandAttachmentClasses(getPopoverAttachment(position), \"pt-tether-element-attached\"),\n        ...expandAttachmentClasses(getTargetAttachment(position), \"pt-tether-target-attached\"),\n    ];\n}\n\nfunction expandAttachmentClasses(attachments: string, prefix: string) {\n    const [verticalAlign, horizontalAlign] = attachments.split(\" \");\n    return [`${prefix}-${verticalAlign}`, `${prefix}-${horizontalAlign}`];\n}\n"]}