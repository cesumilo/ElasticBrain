{"version":3,"sources":["../src/common/errors.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;;AAEH,IAAM,EAAE,GAAG,aAAa,CAAC;AACzB,IAAM,MAAM,GAAM,EAAE,kBAAe,CAAC;AAEpC,4BAAmC,OAAe,EAAE,OAAe,EAAE,OAAoB;IAApB,wBAAA,EAAA,YAAoB;IACrF,MAAM,CAAI,MAAM,UAAK,OAAO,yCAAoC,OAAO,gBAAW,OAAO,iEAClC,CAAC;AAC5D,CAAC;AAHD,gDAGC;AAEY,QAAA,kBAAkB,GAAM,EAAE,kFAA+E,CAAC;AAE1G,QAAA,iCAAiC,GAAG,kBAAkB,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;AAEvF,QAAA,8BAA8B,GAAM,EAAE,oDAAiD,CAAC;AAExF,QAAA,2BAA2B,GAAM,EAAE,kEAA+D,CAAC;AAEnG,QAAA,qBAAqB,GAC3B,EAAE,kFAA+E,CAAC;AAC5E,QAAA,mCAAmC,GACzC,EAAE,6EAA0E,CAAC;AACvE,QAAA,mCAAmC,GACzC,EAAE,gFAA6E,CAAC;AAC1E,QAAA,0CAA0C,GAChD,EAAE,4EAAyE,CAAC;AACtE,QAAA,0CAA0C,GAChD,EAAE,4EAAyE,CAAC;AACtE,QAAA,oCAAoC,GAC1C,EAAE,uEAAoE,CAAC;AACjE,QAAA,4BAA4B,GAClC,EAAE,oDAAiD,CAAC;AAE9C,QAAA,iBAAiB,GAAM,EAAE,mDAAgD,CAAC;AAC1E,QAAA,2BAA2B,GAAM,EAAE,kEAA+D,CAAC;AACnG,QAAA,kCAAkC,GAAM,EAAE,0DAAuD,CAAC;AAClG,QAAA,oBAAoB,GAC1B,EAAE,uDAAoD,CAAC;AACjD,QAAA,yBAAyB,GAC/B,EAAE,uFAAoF,CAAC;AACjF,QAAA,gCAAgC,GACzC,oEAAoE,CAAC;AAE5D,QAAA,yBAAyB,GAAM,EAAE,iDAA8C,CAAC;AAChF,QAAA,iCAAiC,GACvC,EAAE,qEAAkE,CAAC;AAE/D,QAAA,sBAAsB,GAAM,EAAE,uEAAoE,CAAC;AAEnG,QAAA,gBAAgB,GAAM,EAAE,2DAAwD,CAAC;AACjF,QAAA,aAAa,GAAM,EAAE,6EAA0E,CAAC;AAEhG,QAAA,sBAAsB,GAAM,EAAE,6EAA0E,CAAC;AAEzG,QAAA,6BAA6B,GAAM,EAAE,uEAAoE,CAAC;AAC1G,QAAA,qCAAqC,GAC3C,EAAE,iFAA8E,CAAC","file":"common/errors.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nconst ns = \"[Blueprint]\";\nconst deprec = `${ns} DEPRECATION:`;\n\nexport function deprecationWarning(oldName: string, newName: string, message: string = \"\") {\n    return `${deprec} '${oldName}' prop has been replaced by the '${newName}' prop. ${message}\nIt will be removed in the next major version of blueprint.`;\n}\n\nexport const ALERT_CANCEL_PROPS = `${ns} If either cancelButtonText or onCancel are set in <Alert>, both must be set.`;\n\nexport const DEPRECATION_SHOULD_ATTACH_TO_BODY = deprecationWarning(\"shouldAttachToBody\", \"inline\");\n\nexport const COLLAPSIBLE_LIST_INVALID_CHILD = `${ns} <CollapsibleList> children must be <MenuItem>s`;\n\nexport const MENU_CHILDREN_SUBMENU_MUTEX = `${ns} <MenuItem> children and submenu props are mutually exclusive`;\n\nexport const NUMERIC_INPUT_MIN_MAX =\n    `${ns} <NumericInput> requires min to be strictly less than max if both are defined`;\nexport const NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND =\n    `${ns} <NumericInput> requires minorStepSize to be strictly less than stepSize`;\nexport const NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND =\n    `${ns} <NumericInput> requires majorStepSize to be strictly greater than stepSize`;\nexport const NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE =\n    `${ns} <NumericInput> requires minorStepSize to be strictly greater than zero`;\nexport const NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE =\n    `${ns} <NumericInput> requires majorStepSize to be strictly greater than zero`;\nexport const NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE =\n    `${ns} <NumericInput> requires stepSize to be strictly greater than zero`;\nexport const NUMERIC_INPUT_STEP_SIZE_NULL =\n    `${ns} <NumericInput> requires stepSize to be defined`;\n\nexport const POPOVER_ONE_CHILD = `${ns} <Popover> requires exactly one target element`;\nexport const POPOVER_CONTROLLED_DISABLED = `${ns} <Popover> isOpen and isDisabled props are mutually exclusive`;\nexport const POPOVER_UNCONTROLLED_ONINTERACTION = `${ns} <Popover> onInteraction is ignored when uncontrolled`;\nexport const POPOVER_MODAL_INLINE =\n    `${ns} <Popover isModal={true}> requires inline={false}.`;\nexport const POPOVER_MODAL_INTERACTION =\n    `${ns} <Popover isModal={true}> requires interactionKind={PopoverInteractionKind.CLICK}.`;\nexport const POPOVER_SMART_POSITIONING_INLINE =\n    `{ns} <Popover useSmartPositioning={true}> requires inline={false}.`;\n\nexport const RADIOGROUP_RADIO_CHILDREN = `${ns} <RadioGroup> only supports <Radio> children`;\nexport const RADIOGROUP_CHILDREN_OPTIONS_MUTEX =\n    `${ns} <RadioGroup> children and options props are mutually exclusive.`;\n\nexport const RANGESLIDER_NULL_VALUE = `${ns} <RangeSlider> value prop must be an array of two non-null numbers`;\n\nexport const TABS_FIRST_CHILD = `${ns} First child of <Tabs> component should be a <TabList>`;\nexport const TABS_MISMATCH = `${ns} Number of <Tab> components should equal number of <TabPanel> components`;\n\nexport const TOASTER_INLINE_WARNING = `${ns} Toaster.create() ignores inline prop as it always creates a new element`;\n\nexport const WARNING_DIALOG_NO_HEADER_ICON = `${ns} Warning: Dialog iconName prop is ignored if title prop is omitted`;\nexport const WARNING_DIALOG_NO_HEADER_CLOSE_BUTTON =\n    `${ns} Warning: Dialog isCloseButtonShown prop is ignored if title prop is omitted`;\n"]}