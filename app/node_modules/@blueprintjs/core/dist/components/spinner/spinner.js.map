{"version":3,"sources":["../src/components/spinner/spinner.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;AAEH,uCAAyC;AACzC,kDAAoD;AACpD,6BAA+B;AAE/B,8CAAgD;AAEhD,4CAA2C;AAE3C,2EAA2E;AAC3E,IAAM,aAAa,GAAG,kEAAkE,CAAC;AAEzF,oFAAoF;AACpF,wEAAwE;AACxE,uGAAuG;AACvG,IAAM,WAAW,GAAG,GAAG,CAAC;AAYxB,IAAa,OAAO;IAAS,mCAAkC;IAA/D;;IA0CA,CAAC;IAvCU,wBAAM,GAAb;QACU,IAAA,eAAyC,EAAvC,wBAAS,EAAE,kBAAM,EAAE,gBAAK,CAAgB;QAChD,IAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;YACrE,YAAY,EAAE,KAAK,IAAI,IAAI;SAC9B,EAAE,SAAS,CAAC,CAAC;QAEd,IAAM,KAAK,GAAwB;YAC/B,eAAe,EAAK,WAAW,SAAI,WAAa;YAChD,+CAA+C;YAC/C,6DAA6D;YAC7D,gBAAgB,EAAE,WAAW,GAAG,WAAW,GAAG,CAAC,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,aAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5F,CAAC;QAEF,wFAAwF;QACxF,IAAM,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE;YAC5C,SAAS,EAAE,iBAAiB;YAC5B,CAAC,EAAE,aAAa;YAChB,UAAU,EAAE,WAAW;YACvB,KAAK,OAAA;SACR,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAC/B,6BAAK,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,iBAAiB,GAAG,aAAa;YACjF,8BAAM,SAAS,EAAC,kBAAkB,EAAC,CAAC,EAAE,aAAa,GAAI;YACtD,WAAW,CACV,CACT,CAAC;IACN,CAAC;IAED,0EAA0E;IAChE,iCAAe,GAAzB,UAA0B,OAAe,EAAE,OAAoB;QAC3D,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,OAAO;YACnB,6BAAK,SAAS,EAAC,0BAA0B,IACpC,OAAO,CACN,CACJ,CACT,CAAC;IACN,CAAC;IACL,cAAC;AAAD,CA1CA,AA0CC,CA1C4B,KAAK,CAAC,SAAS,GA0C3C;AAzCiB,mBAAW,GAAG,mBAAmB,CAAC;AADvC,OAAO;IADnB,UAAU;GACE,OAAO,CA0CnB;AA1CY,0BAAO;AA4CP,QAAA,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC","file":"components/spinner/spinner.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as PureRender from \"pure-render-decorator\";\nimport * as React from \"react\";\n\nimport * as Classes from \"../../common/classes\";\nimport { IIntentProps, IProps } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n\n// see http://stackoverflow.com/a/18473154/3124288 for calculating arc path\nconst SPINNER_TRACK = \"M 50,50 m 0,-44.5 a 44.5,44.5 0 1 1 0,89 a 44.5,44.5 0 1 1 0,-89\";\n\n// unitless total length of SVG path, to which stroke-dash* properties are relative.\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pathLength\n// this value is the result of `<path d={SPINNER_TRACK} />.getTotalLength()` and works in all browsers:\nconst PATH_LENGTH = 280;\n\nexport interface ISpinnerProps extends IProps, IIntentProps {\n    /**\n     * A value between 0 and 1 (inclusive) representing how far along the operation is.\n     * Values below 0 or above 1 will be interpreted as 0 or 1 respectively.\n     * Omitting this prop will result in an \"indeterminate\" spinner where the head spins indefinitely.\n     */\n    value?: number;\n}\n\n@PureRender\nexport class Spinner extends React.Component<ISpinnerProps, {}> {\n    public static displayName = \"Blueprint.Spinner\";\n\n    public render() {\n        const { className, intent, value } = this.props;\n        const classes = classNames(Classes.SPINNER, Classes.intentClass(intent), {\n            \"pt-no-spin\": value != null,\n        }, className);\n\n        const style: React.CSSProperties = {\n            strokeDasharray: `${PATH_LENGTH} ${PATH_LENGTH}`,\n            // default to quarter-circle when indeterminate\n            // IE11: CSS transitions on SVG elements are Not Supported :(\n            strokeDashoffset: PATH_LENGTH - PATH_LENGTH * (value == null ? 0.25 : clamp(value, 0, 1)),\n        };\n\n        // HACKHACK to temporarily squash error regarding React.SVGProps missing prop pathLength\n        const headElement = React.createElement(\"path\", {\n            className: \"pt-spinner-head\",\n            d: SPINNER_TRACK,\n            pathLength: PATH_LENGTH,\n            style,\n        });\n\n        return this.renderContainer(classes,\n            <svg viewBox={classes.indexOf(Classes.SMALL) >= 0 ? \"-15 -15 130 130\" : \"0 0 100 100\"}>\n                <path className=\"pt-spinner-track\" d={SPINNER_TRACK} />\n                {headElement}\n            </svg>,\n        );\n    }\n\n    // abstract away the container elements so SVGSpinner can do its own thing\n    protected renderContainer(classes: string, content: JSX.Element) {\n        return (\n            <div className={classes}>\n                <div className=\"pt-spinner-svg-container\">\n                    {content}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport const SpinnerFactory = React.createFactory(Spinner);\n"]}