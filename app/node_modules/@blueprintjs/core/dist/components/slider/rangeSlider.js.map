{"version":3,"sources":["../src/components/slider/rangeSlider.tsx"],"names":[],"mappings":"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","file":"components/slider/rangeSlider.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport { isFunction } from \"../../common/utils\";\nimport { CoreSlider, ICoreSliderProps } from \"./coreSlider\";\nimport { Handle } from \"./handle\";\n\nexport type NumberRange = [number, number];\n\nenum RangeEnd {\n    LEFT = 0,\n    RIGHT = 1,\n}\n\nexport interface IRangeSliderProps extends ICoreSliderProps {\n    /**\n     * Range value of slider. Handles will be rendered at each position in the range.\n     * @default [0, 10]\n     */\n    value?: NumberRange;\n\n    /** Callback invoked when the range value changes. */\n    onChange?(value: NumberRange): void;\n\n    /** Callback invoked when a handle is released. */\n    onRelease?(value: NumberRange): void;\n}\n\nexport class RangeSlider extends CoreSlider<IRangeSliderProps> {\n    public static defaultProps: IRangeSliderProps = {\n        disabled: false,\n        labelStepSize: 1,\n        max: 10,\n        min: 0,\n        showTrackFill: true,\n        stepSize: 1,\n        value: [0, 10],\n    };\n\n    public displayName = \"Blueprint.RangeSlider\";\n    public className = classNames(Classes.SLIDER, Classes.RANGE_SLIDER);\n\n    private handles: Handle[] = [];\n\n    protected renderFill() {\n        const [leftValue, rightValue] = this.props.value;\n        if (leftValue === rightValue) { return undefined; }\n        // expand by 1px in each direction so it sits under the handle border\n        let left = Math.round((leftValue - this.props.min) * this.state.tickSize) - 1;\n        let width = Math.round((rightValue - leftValue) * this.state.tickSize) + 2;\n        if (width < 0) {\n            left += width;\n            width = Math.abs(width);\n        }\n        return <div className={`${Classes.SLIDER}-progress`} style={{ left, width }} />;\n    }\n\n    protected renderHandles() {\n        const { disabled, max, min, onRelease, stepSize, value } = this.props;\n        return value.map((val, index) => (\n            <Handle\n                disabled={disabled}\n                key={index}\n                label={this.formatLabel(val)}\n                max={max}\n                min={min}\n                onChange={this.getHandlerForIndex(index, this.handleChange)}\n                onRelease={this.getHandlerForIndex(index, onRelease)}\n                ref={this.addHandleRef}\n                stepSize={stepSize}\n                tickSize={this.state.tickSize}\n                value={val}\n            />\n        ));\n    }\n\n    protected handleTrackClick(event: React.MouseEvent<HTMLElement>) {\n        this.handles.reduce((min, handle) => {\n            // find closest handle to the mouse position\n            const value = handle.clientToValue(event.clientX);\n            return this.nearestHandleForValue(value, min, handle);\n        }).beginHandleMovement(event);\n    }\n\n    protected handleTrackTouch(event: React.TouchEvent<HTMLElement>) {\n        this.handles.reduce((min, handle) => {\n            // find closest handle to the touch position\n            const value = handle.clientToValue(handle.touchEventClientX(event));\n            return this.nearestHandleForValue(value, min, handle);\n        }).beginHandleTouchMovement(event);\n    }\n\n    protected nearestHandleForValue(value: number, firstHandle: Handle, secondHandle: Handle) {\n        const firstDistance = Math.abs(value - firstHandle.props.value);\n        const secondDistance = Math.abs(value - secondHandle.props.value);\n        return secondDistance < firstDistance ? secondHandle : firstHandle;\n    }\n\n    protected validateProps(props: IRangeSliderProps) {\n        const { value } = props;\n        if (value == null || value[RangeEnd.LEFT] == null || value[RangeEnd.RIGHT] == null) {\n            throw new Error(Errors.RANGESLIDER_NULL_VALUE);\n        }\n    }\n\n    private addHandleRef = (ref: Handle) => {\n        if (ref != null) {\n            this.handles.push(ref);\n        }\n    }\n\n    private getHandlerForIndex = (index: RangeEnd, callback: (value: NumberRange) => any) => (newValue: number) => {\n        if (isFunction(callback)) {\n            const [leftValue, rightValue] = this.props.value;\n            if (index === RangeEnd.LEFT) {\n                callback([Math.min(newValue, rightValue), rightValue]);\n            } else {\n                callback([leftValue, Math.max(newValue, leftValue)]);\n            }\n        }\n    }\n\n    private handleChange = (newValue: NumberRange) => {\n        const [leftValue, rightValue] = this.props.value;\n        const [newLeftValue, newRightValue] = newValue;\n        if ((leftValue !== newLeftValue || rightValue !== newRightValue) && isFunction(this.props.onChange)) {\n            this.props.onChange(newValue);\n        }\n    }\n}\n\nexport const RangeSliderFactory = React.createFactory(RangeSlider);\n"]}