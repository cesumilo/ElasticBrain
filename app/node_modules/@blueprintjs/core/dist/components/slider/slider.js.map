{"version":3,"sources":["../src/components/slider/slider.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;AAEH,6BAA+B;AAE/B,8CAAgD;AAChD,4CAA2C;AAC3C,2CAA4D;AAC5D,mCAAkC;AAsBlC;IAA4B,kCAAwB;IAApD;QAAA,qEAuDC;QAHW,qBAAe,GAAG,UAAC,GAAW;YAClC,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACtB,CAAC,CAAA;;IACL,CAAC;IAvCa,2BAAU,GAApB;QACI,IAAM,YAAY,GAAG,aAAK,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC7E,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChF,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,IAAI,IAAI,KAAK,CAAC;YACd,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;QACD,MAAM,CAAC,6BAAK,SAAS,EAAK,OAAO,CAAC,MAAM,cAAW,EAAE,KAAK,EAAE,EAAE,IAAI,MAAA,EAAE,KAAK,OAAA,EAAE,GAAI,CAAC;IACpF,CAAC;IAES,8BAAa,GAAvB;QACI,yDAAyD;QACzD,MAAM,CAAC,CACH,oBAAC,eAAM,uBACC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,KAAK,IACd,SAAS,EAAC,EAAE,EACZ,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EACzC,GAAG,EAAE,IAAI,CAAC,eAAe,IAC3B,CACL,CAAC;IACN,CAAC;IAES,iCAAgB,GAA1B,UAA2B,KAAoC;QAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC;IACL,CAAC;IAES,iCAAgB,GAA1B,UAA2B,KAAoC;QAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAChD,CAAC;IACL,CAAC;IAKL,aAAC;AAAD,CAvDA,AAuDC,CAvD2B,uBAAU;AACpB,mBAAY,GAAiB;IACvC,QAAQ,EAAE,KAAK;IACf,YAAY,EAAE,CAAC;IACf,aAAa,EAAE,CAAC;IAChB,GAAG,EAAE,EAAE;IACP,GAAG,EAAE,CAAC;IACN,aAAa,EAAE,IAAI;IACnB,QAAQ,EAAE,CAAC;IACX,KAAK,EAAE,CAAC;CACX,CAAC;AAVO,wBAAM;AAyDN,QAAA,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC","file":"components/slider/slider.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as React from \"react\";\n\nimport * as Classes from \"../../common/classes\";\nimport { clamp } from \"../../common/utils\";\nimport { CoreSlider, ICoreSliderProps } from \"./coreSlider\";\nimport { Handle } from \"./handle\";\n\nexport interface ISliderProps extends ICoreSliderProps {\n    /**\n     * Initial value of the slider, determines where the fill starts from.\n     * @default 0\n     */\n    initialValue?: number;\n\n    /**\n     * Value of slider.\n     * @default 0\n     */\n    value?: number;\n\n    /** Callback invoked when the value changes. */\n    onChange?(value: number): void;\n\n    /** Callback invoked when the handle is released. */\n    onRelease?(value: number): void;\n}\n\nexport class Slider extends CoreSlider<ISliderProps> {\n    public static defaultProps: ISliderProps = {\n        disabled: false,\n        initialValue: 0,\n        labelStepSize: 1,\n        max: 10,\n        min: 0,\n        showTrackFill: true,\n        stepSize: 1,\n        value: 0,\n    };\n\n    public displayName: \"Blueprint.Slider\";\n\n    private handle: Handle;\n\n    protected renderFill() {\n        const initialValue = clamp(this.props.initialValue, this.props.min, this.props.max);\n        let left = Math.round((initialValue - this.props.min) * this.state.tickSize);\n        let width = Math.round((this.props.value - initialValue) * this.state.tickSize);\n        if (width < 0) {\n            left += width;\n            width = Math.abs(width);\n        }\n        return <div className={`${Classes.SLIDER}-progress`} style={{ left, width }} />;\n    }\n\n    protected renderHandles() {\n        // make sure to *not* pass this.props.className to handle\n        return (\n            <Handle\n                {...this.props}\n                {...this.state}\n                className=\"\"\n                label={this.formatLabel(this.props.value)}\n                ref={this.handleHandleRef}\n            />\n        );\n    }\n\n    protected handleTrackClick(event: React.MouseEvent<HTMLElement>) {\n        if (this.handle != null) {\n            this.handle.beginHandleMovement(event);\n        }\n    }\n\n    protected handleTrackTouch(event: React.TouchEvent<HTMLElement>) {\n        if (this.handle != null) {\n            this.handle.beginHandleTouchMovement(event);\n        }\n    }\n\n    private handleHandleRef = (ref: Handle) => {\n        this.handle = ref;\n    }\n}\n\nexport const SliderFactory = React.createFactory(Slider);\n"]}