{"version":3,"sources":["../src/components/popover/popover.tsx"],"names":[],"mappings":"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","file":"components/popover/popover.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as PureRender from \"pure-render-decorator\";\nimport * as React from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport * as Tether from \"tether\";\n\nimport { AbstractComponent } from \"../../common/abstractComponent\";\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport * as PosUtils from \"../../common/position\";\nimport { IProps } from \"../../common/props\";\nimport * as TetherUtils from \"../../common/tetherUtils\";\nimport * as Utils from \"../../common/utils\";\nimport { IOverlayableProps, Overlay } from \"../overlay/overlay\";\nimport { Tooltip } from \"../tooltip/tooltip\";\n\nimport * as Arrows from \"./arrows\";\n\nconst SVG_SHADOW_PATH = \"M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378\" +\n    \"-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z\";\nconst SVG_ARROW_PATH = \"M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005\" +\n    \"c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z\";\n\nexport enum PopoverInteractionKind {\n    CLICK,\n    CLICK_TARGET_ONLY,\n    HOVER,\n    HOVER_TARGET_ONLY,\n}\n\nexport interface IPopoverProps extends IOverlayableProps, IProps {\n    /** HTML props for the backdrop element. Can be combined with `backdropClassName`. */\n    backdropProps?: React.HTMLProps<HTMLDivElement>;\n\n    /**\n     * The content displayed inside the popover.\n     */\n    content?: JSX.Element | string;\n\n    /**\n     * The length of a side of the square used to render the arrow.\n     * @default 30\n     * @internal\n     */\n    arrowSize?: number;\n\n    /**\n     * Constraints for the underlying Tether instance.\n     * See http://tether.io/#constraints.\n     */\n    constraints?: TetherUtils.ITetherConstraint[];\n\n    /**\n     * Initial opened state when uncontrolled.\n     * @default false\n     */\n    defaultIsOpen?: boolean;\n\n    /**\n     * The amount of time in milliseconds the popover should remain open after the\n     * user hovers off the trigger. The timer is canceled if the user mouses over the\n     * target before it expires. This option only applies when `interactionKind` is `HOVER` or\n     * `HOVER_TARGET_ONLY`.\n     * @default 300\n     */\n    hoverCloseDelay?: number;\n\n    /**\n     * The amount of time in milliseconds the popover should wait before opening after the the\n     * user hovers over the trigger. The timer is canceled if the user mouses away from the\n     * target before it expires. This option only applies when `interactionKind` is `HOVER` or\n     * `HOVER_TARGET_ONLY`.\n     * @default 150\n     */\n    hoverOpenDelay?: number;\n\n    /**\n     * Whether a non-inline popover should automatically inherit the dark theme from its parent.\n     * @default true\n     */\n    inheritDarkTheme?: boolean;\n\n    /**\n     * The kind of interaction that triggers the display of the popover.\n     * @default PopoverInteractionKind.CLICK\n     */\n    interactionKind?: PopoverInteractionKind;\n\n    /**\n     * Prevents the popover from appearing when `true`.\n     * @default false\n     */\n    isDisabled?: boolean;\n\n    /**\n     * Enables an invisible overlay beneath the popover that captures clicks and prevents\n     * interaction with the rest of the document until the popover is closed.\n     * This prop is only available when `interactionKind` is `PopoverInteractionKind.CLICK`.\n     * When modal popovers are opened, they become focused.\n     * @default false\n     */\n    isModal?: boolean;\n\n    /**\n     * Whether the popover is visible. Passing this prop puts the popover in\n     * controlled mode, where the only way to change visibility is by updating this property.\n     * @default undefined\n     */\n    isOpen?: boolean;\n\n    /**\n     * Callback invoked in controlled mode when the popover open state *would* change due to\n     * user interaction based on the value of `interactionKind`.\n     */\n    onInteraction?: (nextOpenState: boolean) => void;\n\n    /**\n     * A space-delimited string of class names that are applied to the popover (but not the target).\n     */\n    popoverClassName?: string;\n\n    /**\n     * Callback invoked when the popover opens after it is added to the DOM.\n     */\n    popoverDidOpen?: () => void;\n\n    /**\n     * Callback invoked when a popover begins to close.\n     */\n    popoverWillClose?: () => void;\n\n    /**\n     * Callback invoked before the popover opens.\n     */\n    popoverWillOpen?: () => void;\n\n    /**\n     * Space-delimited string of class names applied to the\n     * portal that holds the popover if `inline = false`.\n     */\n    portalClassName?: string;\n\n    /**\n     * The position (relative to the target) at which the popover should appear.\n     * @default Blueprint.Common.Position.RIGHT\n     */\n    position?: PosUtils.Position;\n\n    /**\n     * The name of the HTML tag to use when rendering the popover target wrapper element (`.pt-popover-target`).\n     * @default \"span\"\n     */\n    rootElementTag?: string;\n\n    /**\n     * Whether the arrow's offset should be computed such that it always points at the center\n     * of the target. If false, arrow position is hardcoded via CSS, which expects a 30px target.\n     * @default true\n     */\n    useSmartArrowPositioning?: boolean;\n\n    /**\n     * Whether the popover will try to reposition itself\n     * if there isn't room for it in its current position.\n     * The popover will try to flip to the opposite side of the target element but\n     * will not move to an adjacent side.\n     * @default false\n     */\n    useSmartPositioning?: boolean;\n}\n\nexport interface IPopoverState {\n    isOpen?: boolean;\n    ignoreTargetDimensions?: boolean;\n    targetHeight?: number;\n    targetWidth?: number;\n}\n\n@PureRender\nexport class Popover extends AbstractComponent<IPopoverProps, IPopoverState> {\n    public static defaultProps: IPopoverProps = {\n        arrowSize: 30,\n        className: \"\",\n        content: <span/>,\n        defaultIsOpen: false,\n        hoverCloseDelay: 300,\n        hoverOpenDelay: 150,\n        inheritDarkTheme: true,\n        inline: false,\n        interactionKind: PopoverInteractionKind.CLICK,\n        isDisabled: false,\n        isModal: false,\n        popoverClassName: \"\",\n        position: PosUtils.Position.RIGHT,\n        rootElementTag: \"span\",\n        transitionDuration: 300,\n        useSmartArrowPositioning: true,\n        useSmartPositioning: false,\n    };\n\n    public displayName = \"Blueprint.Popover\";\n\n    private hasDarkParent = false;\n    // a flag that is set to true while we are waiting for the underlying Portal to complete rendering\n    private isContentMounting = false;\n    private cancelOpenTimeout: () => void;\n    private popoverElement: HTMLElement;\n    private targetElement: HTMLElement;\n    private tether: Tether;\n\n    private refHandlers = {\n        popover: (ref: HTMLDivElement) => {\n            this.popoverElement = ref;\n            this.updateTether();\n            this.updateArrowPosition();\n        },\n        target: (ref: HTMLElement) => {\n            this.targetElement = ref;\n        },\n    };\n\n    public constructor(props?: IPopoverProps, context?: any) {\n        super(props, context);\n\n        let isOpen = props.defaultIsOpen;\n        if (props.isOpen != null) {\n            isOpen = props.isOpen;\n        }\n\n        this.state = {\n            isOpen,\n            ignoreTargetDimensions: false,\n            targetHeight: 0,\n            targetWidth: 0,\n        };\n    }\n\n    public render() {\n        const { className, interactionKind } = this.props;\n        let targetProps: React.HTMLProps<HTMLElement>;\n        if (interactionKind === PopoverInteractionKind.HOVER\n            || interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY) {\n            targetProps = {\n                onMouseEnter: this.handleMouseEnter,\n                onMouseLeave: this.handleMouseLeave,\n            };\n        // any one of the CLICK* values\n        } else {\n            targetProps = {\n                onClick: this.handleTargetClick,\n            };\n        }\n        targetProps.className = classNames(Classes.POPOVER_TARGET, {\n            [Classes.POPOVER_OPEN]: this.state.isOpen,\n        }, className);\n        targetProps.ref = this.refHandlers.target;\n\n        let children = this.props.children;\n        if (typeof this.props.children === \"string\") {\n            // wrap text in a <span> so that we have a consistent way to interact with the target node(s)\n            children = React.DOM.span({}, this.props.children);\n        } else {\n            const child = React.Children.only(this.props.children) as React.ReactElement<any>;\n            // force disable single Tooltip child when popover is open (BLUEPRINT-552)\n            if (this.state.isOpen && child.type === Tooltip) {\n                children = React.cloneElement(child, { isDisabled: true });\n            }\n        }\n\n        return React.createElement(this.props.rootElementTag, targetProps, children,\n            <Overlay\n                autoFocus={this.props.autoFocus}\n                backdropClassName={Classes.POPOVER_BACKDROP}\n                backdropProps={this.props.backdropProps}\n                canEscapeKeyClose={this.props.canEscapeKeyClose}\n                canOutsideClickClose={this.props.interactionKind === PopoverInteractionKind.CLICK}\n                className={this.props.portalClassName}\n                didOpen={this.handleContentMount}\n                enforceFocus={this.props.enforceFocus}\n                hasBackdrop={this.props.isModal}\n                inline={this.props.inline}\n                isOpen={this.state.isOpen}\n                lazy={this.props.lazy}\n                onClose={this.handleOverlayClose}\n                transitionDuration={this.props.transitionDuration}\n                transitionName={Classes.POPOVER}\n            >\n                {this.renderPopover()}\n            </Overlay>,\n        );\n    }\n\n    public componentDidMount() {\n        this.componentDOMChange();\n    }\n\n    public componentWillReceiveProps(nextProps: IPopoverProps) {\n        super.componentWillReceiveProps(nextProps);\n\n        if (nextProps.isDisabled && !this.props.isDisabled) {\n            // ok to use setOpenState here because isDisabled and isOpen are mutex.\n            this.setOpenState(false);\n        } else if (nextProps.isOpen !== this.props.isOpen) {\n            // propagate isOpen prop directly to state, circumventing onInteraction callback\n            // (which would be invoked if this went through setOpenState)\n            this.setState({ isOpen: nextProps.isOpen});\n        }\n    }\n\n    public componentWillUpdate(_: IPopoverProps, nextState: IPopoverState) {\n        if (!this.state.isOpen && nextState.isOpen) {\n            this.isContentMounting = true;\n            Utils.safeInvoke(this.props.popoverWillOpen);\n        } else if (this.state.isOpen && !nextState.isOpen) {\n            Utils.safeInvoke(this.props.popoverWillClose);\n        }\n    }\n\n    public componentDidUpdate() {\n        this.componentDOMChange();\n    }\n\n    public componentWillUnmount() {\n        super.componentWillUnmount();\n        this.destroyTether();\n    }\n\n    protected validateProps(props: IPopoverProps & {children?: React.ReactNode}) {\n        if (props.isOpen == null && props.onInteraction != null) {\n            console.warn(Errors.POPOVER_UNCONTROLLED_ONINTERACTION);\n        }\n\n        if (props.isOpen != null && props.isDisabled) {\n            throw new Error(Errors.POPOVER_CONTROLLED_DISABLED);\n        }\n\n        if (props.isModal && props.interactionKind !== PopoverInteractionKind.CLICK) {\n            throw new Error(Errors.POPOVER_MODAL_INTERACTION);\n        }\n\n        if (props.isModal && props.inline) {\n            throw new Error(Errors.POPOVER_MODAL_INLINE);\n        }\n\n        if (props.useSmartPositioning && props.inline) {\n            throw new Error(Errors.POPOVER_SMART_POSITIONING_INLINE);\n        }\n\n        if (typeof props.children !== \"string\") {\n            try {\n                React.Children.only(props.children);\n            } catch (e) {\n                throw new Error(Errors.POPOVER_ONE_CHILD);\n            }\n        }\n    }\n\n    private componentDOMChange() {\n        this.setState({\n            targetHeight: this.targetElement.clientHeight,\n            targetWidth: this.targetElement.clientWidth,\n        });\n        if (!this.props.inline) {\n            this.hasDarkParent = this.targetElement.closest(`.${Classes.DARK}`) != null;\n            this.updateTether();\n        }\n    }\n\n    private renderPopover() {\n        const { inline, interactionKind } = this.props;\n        let popoverHandlers: React.HTMLAttributes<HTMLDivElement> = {\n            // always check popover clicks for dismiss class\n            onClick: this.handlePopoverClick,\n        };\n        if ((interactionKind === PopoverInteractionKind.HOVER)\n            || (inline && interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY)) {\n            popoverHandlers.onMouseEnter = this.handleMouseEnter;\n            popoverHandlers.onMouseLeave = this.handleMouseLeave;\n        }\n\n        const positionClasses = TetherUtils.getAttachmentClasses(this.props.position).join(\" \");\n        const containerClasses = classNames(Classes.TRANSITION_CONTAINER, { [positionClasses]: inline });\n        const popoverClasses = classNames(Classes.POPOVER, {\n            [Classes.DARK]: this.props.inheritDarkTheme && this.hasDarkParent && !inline,\n        }, this.props.popoverClassName);\n\n        const styles = this.getArrowPositionStyles();\n        const transform = { transformOrigin: this.getPopoverTransformOrigin() };\n\n        return (\n            <div className={containerClasses} ref={this.refHandlers.popover} style={styles.container}>\n                <div className={popoverClasses} style={transform} {...popoverHandlers}>\n                    <div className={Classes.POPOVER_ARROW} style={styles.arrow}>\n                        <svg viewBox=\"0 0 30 30\">\n                            <path className={Classes.POPOVER_ARROW + \"-border\"} d={SVG_SHADOW_PATH} />\n                            <path className={Classes.POPOVER_ARROW + \"-fill\"} d={SVG_ARROW_PATH} />\n                        </svg>\n                    </div>\n                    <div className={Classes.POPOVER_CONTENT}>\n                        {this.props.content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    private getArrowPositionStyles(): { arrow?: React.CSSProperties, container?: React.CSSProperties } {\n        if (this.props.useSmartArrowPositioning) {\n            const dimensions = { height: this.state.targetHeight, width: this.state.targetWidth };\n            return Arrows.getArrowPositionStyles(this.props.position,\n                this.props.arrowSize, this.state.ignoreTargetDimensions, dimensions, this.props.inline);\n        } else {\n            return {};\n        }\n    }\n\n    private getPopoverTransformOrigin(): string {\n        // if smart positioning is enabled then we must rely CSS classes to put transform origin\n        // on the correct side and cannot override it in JS. (https://github.com/HubSpot/tether/issues/154)\n        if (this.props.useSmartArrowPositioning && !this.props.useSmartPositioning) {\n            const dimensions = { height: this.state.targetHeight, width: this.state.targetWidth };\n            return Arrows.getPopoverTransformOrigin(this.props.position,\n                this.props.arrowSize, dimensions);\n        } else {\n            return undefined;\n        }\n    }\n\n    private handleContentMount = () => {\n        if (Utils.isFunction(this.props.popoverDidOpen) && this.isContentMounting) {\n            this.props.popoverDidOpen();\n            this.isContentMounting = false;\n        }\n    }\n\n    private handleMouseEnter = (e: React.MouseEvent<HTMLElement>) => {\n        // if we're entering the popover, and the mode is set to be HOVER_TARGET_ONLY, we want to manually\n        // trigger the mouse leave event, as hovering over the popover shouldn't count.\n        if (this.props.inline\n            && this.isElementInPopover(e.target as Element)\n            && this.props.interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY) {\n            this.handleMouseLeave(e);\n        } else if (!this.props.isDisabled) {\n            // only begin opening popover when it is enabled\n            this.setOpenState(true, e, this.props.hoverOpenDelay);\n        }\n    }\n\n    private handleMouseLeave = (e: React.MouseEvent<HTMLElement>) => {\n        // user-configurable closing delay is helpful when moving mouse from target to popover\n        this.setOpenState(false, e, this.props.hoverCloseDelay);\n    }\n\n    private handlePopoverClick = (e: React.MouseEvent<HTMLElement>) => {\n        const eventTarget = e.target as HTMLElement;\n        const shouldDismiss = eventTarget.closest(`.${Classes.POPOVER_DISMISS}`) != null;\n        const overrideDismiss = eventTarget.closest(`.${Classes.POPOVER_DISMISS_OVERRIDE}`) != null;\n        if (shouldDismiss && !overrideDismiss) {\n            this.setOpenState(false, e);\n        }\n    }\n\n    private handleOverlayClose = (e: React.SyntheticEvent<HTMLElement>) => {\n        const eventTarget = e.target as HTMLElement;\n        // if click was in target, target event listener will handle things, so don't close\n        if (!Utils.elementIsOrContains(this.targetElement, eventTarget)\n                || e.nativeEvent instanceof KeyboardEvent) {\n            this.setOpenState(false, e);\n        }\n    }\n\n    private handleTargetClick = (e: React.MouseEvent<HTMLElement>) => {\n        // ensure click did not originate from within inline popover before closing\n        if (!this.props.isDisabled && !this.isElementInPopover(e.target as HTMLElement)) {\n            if (this.props.isOpen == null) {\n                this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\n            } else {\n                this.setOpenState(!this.props.isOpen, e);\n            }\n        }\n    }\n\n    private updateArrowPosition() {\n        if (this.popoverElement != null) {\n            const arrow = this.popoverElement.getElementsByClassName(Classes.POPOVER_ARROW)[0] as HTMLElement;\n            const centerWidth = (this.state.targetWidth + arrow.clientWidth) / 2;\n            const centerHeight = (this.state.targetHeight + arrow.clientHeight) / 2;\n\n            const ignoreWidth = centerWidth > this.popoverElement.clientWidth\n                && PosUtils.isPositionHorizontal(this.props.position);\n            const ignoreHeight = centerHeight > this.popoverElement.clientHeight\n                && PosUtils.isPositionVertical(this.props.position);\n\n            if (!this.state.ignoreTargetDimensions && (ignoreWidth || ignoreHeight)) {\n                this.setState({ignoreTargetDimensions: true});\n            } else if (this.state.ignoreTargetDimensions && !ignoreWidth && !ignoreHeight) {\n                this.setState({ignoreTargetDimensions: false});\n            }\n        }\n    }\n\n    private updateTether() {\n        if (this.state.isOpen && !this.props.inline && this.popoverElement != null) {\n            // the .pt-popover-target span we wrap the children in won't always be as big as its children\n            // so instead, we'll position tether based off of its first child.\n            // NOTE: use findDOMNode(this) directly because this.targetElement may not exist yet\n            const target = findDOMNode(this).childNodes[0];\n            const tetherOptions = TetherUtils.createTetherOptions(\n                this.popoverElement, target, this.props.position,\n                this.props.useSmartPositioning, this.props.constraints,\n            );\n            if (this.tether == null) {\n                this.tether = new Tether(tetherOptions);\n            } else {\n                this.tether.setOptions(tetherOptions);\n            }\n\n            // if props.position has just changed, Tether unfortunately positions the popover based\n            // on the margins from the previous position. delay a frame for styles to catch up.\n            setTimeout(() => this.tether.position());\n        } else {\n            this.destroyTether();\n        }\n    }\n\n    private destroyTether() {\n        if (this.tether != null) {\n            this.tether.destroy();\n        }\n    }\n\n    // a wrapper around setState({isOpen}) that will call props.onInteraction instead when in controlled mode.\n    // starts a timeout to delay changing the state if a non-zero duration is provided.\n    private setOpenState(isOpen: boolean, e?: React.SyntheticEvent<HTMLElement>, timeout?: number) {\n        // cancel any existing timeout because we have new state\n        Utils.safeInvoke(this.cancelOpenTimeout);\n        if (timeout > 0) {\n            this.cancelOpenTimeout = this.setTimeout(() => this.setOpenState(isOpen, e), timeout);\n        } else {\n            if (this.props.isOpen == null) {\n                this.setState({ isOpen });\n            } else {\n                Utils.safeInvoke(this.props.onInteraction, isOpen);\n            }\n            if (!isOpen) {\n                Utils.safeInvoke(this.props.onClose, e);\n            }\n        }\n    }\n\n    private isElementInPopover(element: Element) {\n        return this.popoverElement != null && this.popoverElement.contains(element);\n    }\n}\n\nexport const PopoverFactory = React.createFactory(Popover);\n"]}