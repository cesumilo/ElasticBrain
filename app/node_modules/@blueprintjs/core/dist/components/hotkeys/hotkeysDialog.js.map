{"version":3,"sources":["../src/components/hotkeys/hotkeysDialog.tsx"],"names":[],"mappings":"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","file":"components/hotkeys/hotkeysDialog.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Classes } from \"../../common\";\nimport { Dialog, IDialogProps } from \"../../components\";\nimport { Hotkey, IHotkeyProps } from \"./hotkey\";\nimport { Hotkeys } from \"./hotkeys\";\n\nexport interface IHotkeysDialogProps extends IDialogProps {\n    /**\n     * This string displayed as the group name in the hotkeys dialog for all\n     * global hotkeys.\n     */\n    globalHotkeysGroup?: string;\n}\n\nclass HotkeysDialog {\n    public componentProps = {\n        globalHotkeysGroup: \"Global hotkeys\",\n    } as any as IHotkeysDialogProps;\n\n    private container: HTMLElement;\n    private hotkeysQueue = [] as IHotkeyProps[][];\n    private isDialogShowing = false;\n    private timeoutToken = 0;\n\n    public render() {\n        if (this.container == null) {\n            this.container = this.getContainer();\n        }\n        ReactDOM.render(this.renderComponent(), this.container) as React.Component<any, React.ComponentState>;\n    }\n\n    public unmount() {\n        if (this.container != null) {\n            ReactDOM.unmountComponentAtNode(this.container);\n            this.container.remove();\n            delete this.container;\n        }\n    }\n\n    /**\n     * Because hotkeys can be registered globally and locally and because\n     * event ordering cannot be guaranteed, we use this debouncing method to\n     * allow all hotkey listeners to fire and add their hotkeys to the dialog.\n     *\n     * 10msec after the last listener adds their hotkeys, we render the dialog\n     * and clear the queue.\n     */\n    public enqueueHotkeysForDisplay(hotkeys: IHotkeyProps[]) {\n        this.hotkeysQueue.push(hotkeys);\n\n        // reset timeout for debounce\n        clearTimeout(this.timeoutToken);\n        this.timeoutToken = setTimeout(this.show, 10);\n    }\n\n    public show = () => {\n        this.isDialogShowing = true;\n        this.render();\n    }\n\n    public hide = () => {\n        this.isDialogShowing = false;\n        this.render();\n    }\n\n    public isShowing() {\n        return this.isDialogShowing;\n    }\n\n    private getContainer() {\n        if (this.container == null) {\n            this.container = document.createElement(\"div\");\n            this.container.classList.add(Classes.PORTAL);\n            document.body.appendChild(this.container);\n        }\n        return this.container;\n    }\n\n    private renderComponent() {\n        return (\n            <Dialog\n                {...this.componentProps}\n                className={classNames(this.componentProps.className, \"pt-hotkey-dialog\")}\n                isOpen={this.isDialogShowing}\n                onClose={this.hide}\n            >\n                <div className={Classes.DIALOG_BODY}>{this.renderHotkeys()}</div>\n            </Dialog>\n        );\n    }\n\n    private renderHotkeys() {\n        const hotkeys = this.emptyHotkeyQueue();\n        const elements = hotkeys.map((hotkey, index) => {\n            const group = (hotkey.global === true && hotkey.group == null) ?\n                this.componentProps.globalHotkeysGroup : hotkey.group;\n\n            return <Hotkey key={index} {...hotkey} group={group} />;\n        });\n\n        return <Hotkeys>{elements}</Hotkeys>;\n    }\n\n    private emptyHotkeyQueue() {\n        // flatten then empty the hotkeys queue\n        const hotkeys = this.hotkeysQueue.reduce(((arr, queued) => arr.concat(queued)), []);\n        this.hotkeysQueue.length = 0;\n        return hotkeys;\n    }\n}\n\n// singleton instance\nconst HOTKEYS_DIALOG = new HotkeysDialog();\n\nexport function isHotkeysDialogShowing() {\n    return HOTKEYS_DIALOG.isShowing();\n}\n\nexport function setHotkeysDialogProps(props: IHotkeysDialogProps) {\n    for (const key in props) {\n        if (props.hasOwnProperty(key)) {\n            (HOTKEYS_DIALOG.componentProps as any)[key] = (props as any)[key];\n        }\n    }\n}\n\nexport function showHotkeysDialog(hotkeys: IHotkeyProps[]) {\n    HOTKEYS_DIALOG.enqueueHotkeysForDisplay(hotkeys);\n}\n\nexport function hideHotkeysDialog() {\n    HOTKEYS_DIALOG.hide();\n}\n"]}