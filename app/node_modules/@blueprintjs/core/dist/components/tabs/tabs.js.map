{"version":3,"sources":["../src/components/tabs/tabs.tsx"],"names":[],"mappings":"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","file":"components/tabs/tabs.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as PureRender from \"pure-render-decorator\";\nimport * as React from \"react\";\nimport { findDOMNode } from \"react-dom\";\n\nimport { AbstractComponent } from \"../../common/abstractComponent\";\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport * as Keys from \"../../common/keys\";\nimport { IProps } from \"../../common/props\";\nimport * as Utils from \"../../common/utils\";\n\nimport { ITabProps, Tab } from \"./tab\";\nimport { ITabListProps, TabList } from \"./tabList\";\nimport { ITabPanelProps, TabPanel } from \"./tabPanel\";\n\nexport interface ITabsProps extends IProps {\n    /**\n     * The index of the initially selected tab when this component renders.\n     * This prop has no effect if `selectedTabIndex` is also provided.\n     * @default 0\n     */\n    initialSelectedTabIndex?: number;\n\n    /**\n     * The index of the currently selected tab.\n     * Use this prop if you want to explicitly control the currently displayed panel\n     * yourself with the `onChange` event handler.\n     * If this prop is left undefined, the component changes tab panels automatically\n     * when tabs are clicked.\n     */\n    selectedTabIndex?: number;\n\n    /**\n     * A callback function that is invoked when tabs in the tab list are clicked.\n     */\n    onChange?(selectedTabIndex: number, prevSelectedTabIndex: number): void;\n}\n\nexport interface ITabsState {\n    /**\n     * The list of CSS rules to use on the indicator wrapper of the tab list.\n     */\n    indicatorWrapperStyle?: React.CSSProperties;\n\n    /**\n     * The index of the currently selected tab.\n     * If a prop with the same name is set, this bit of state simply aliases the prop.\n     */\n    selectedTabIndex?: number;\n}\n\nconst TAB_CSS_SELECTOR = \"li[role=tab]\";\n\n@PureRender\nexport class Tabs extends AbstractComponent<ITabsProps, ITabsState> {\n    public static defaultProps: ITabsProps = {\n        initialSelectedTabIndex: 0,\n    };\n\n    public displayName = \"Blueprint.Tabs\";\n    // state is initialized in the constructor but getStateFromProps needs state defined\n    public state: ITabsState = {};\n\n    private panelIds: string[] = [];\n    private tabIds: string[] = [];\n\n    constructor(props?: ITabsProps, context?: any) {\n        super(props, context);\n        this.state = this.getStateFromProps(this.props);\n    }\n\n    public render() {\n        return (\n            <div\n                className={classNames(Classes.TABS, this.props.className)}\n                onClick={this.handleClick}\n                onKeyPress={this.handleKeyPress}\n                onKeyDown={this.handleKeyDown}\n            >\n                {this.getChildren()}\n            </div>\n        );\n    }\n\n    public componentWillReceiveProps(newProps: ITabsProps) {\n        const newState = this.getStateFromProps(newProps);\n        this.setState(newState);\n    }\n\n    public componentDidMount() {\n        const selectedTab = findDOMNode(this.refs[`tabs-${this.state.selectedTabIndex}`]) as HTMLElement;\n        this.setTimeout(() => this.moveIndicator(selectedTab));\n    }\n\n    public componentDidUpdate(_: ITabsProps, prevState: ITabsState) {\n        const newIndex = this.state.selectedTabIndex;\n        if (newIndex !== prevState.selectedTabIndex) {\n            const tabElement = findDOMNode(this.refs[`tabs-${newIndex}`]) as HTMLElement;\n            // need to measure on the next frame in case the Tab children simultaneously change\n            this.setTimeout(() => this.moveIndicator(tabElement));\n        }\n    }\n\n    protected validateProps(props: ITabsProps & {children?: React.ReactNode}) {\n        if (React.Children.count(props.children) > 0) {\n            const child = React.Children.toArray(props.children)[0] as React.ReactElement<any>;\n            if (child != null && child.type !== TabList) {\n                throw new Error(Errors.TABS_FIRST_CHILD);\n            }\n\n            if (this.getTabsCount() !== this.getPanelsCount()) {\n                throw new Error(Errors.TABS_MISMATCH);\n            }\n        }\n    }\n\n    private handleClick = (e: React.SyntheticEvent<HTMLDivElement>) => {\n        this.handleTabSelectingEvent(e);\n    }\n\n    private handleKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        const insideTab = (e.target as HTMLElement).closest(`.${Classes.TAB}`) != null;\n        if (insideTab && (e.which === Keys.SPACE || e.which === Keys.ENTER)) {\n            e.preventDefault();\n            this.handleTabSelectingEvent(e);\n        }\n    }\n\n    private handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        // don't want to handle keyDown events inside a tab panel\n        const insideTabList = (e.target as HTMLElement).closest(`.${Classes.TAB_LIST}`) != null;\n        if (!insideTabList) { return; }\n\n        const focusedTabIndex = this.getFocusedTabIndex();\n        if (focusedTabIndex === -1) { return; }\n\n        if (e.which === Keys.ARROW_LEFT) {\n            e.preventDefault();\n\n            // find previous tab that isn't disabled\n            let newTabIndex = focusedTabIndex - 1;\n            let tabIsDisabled = this.isTabDisabled(newTabIndex);\n\n            while (tabIsDisabled && newTabIndex !== -1) {\n                newTabIndex--;\n                tabIsDisabled = this.isTabDisabled(newTabIndex);\n            }\n\n            if (newTabIndex !== -1) {\n                this.focusTab(newTabIndex);\n            }\n        } else if (e.which === Keys.ARROW_RIGHT) {\n            e.preventDefault();\n\n            // find next tab that isn't disabled\n            const tabsCount = this.getTabsCount();\n\n            let newTabIndex = focusedTabIndex + 1;\n            let tabIsDisabled = this.isTabDisabled(newTabIndex);\n\n            while (tabIsDisabled && newTabIndex !== tabsCount) {\n                newTabIndex++;\n                tabIsDisabled = this.isTabDisabled(newTabIndex);\n            }\n\n            if (newTabIndex !== tabsCount) {\n                this.focusTab(newTabIndex);\n            }\n        }\n    }\n\n    private handleTabSelectingEvent = (e: React.SyntheticEvent<HTMLDivElement>) => {\n        const tabElement = (e.target as HTMLElement).closest(TAB_CSS_SELECTOR) as HTMLElement;\n\n        // select only if Tab is one of us and is enabled\n        if (tabElement != null\n                && this.tabIds.indexOf(tabElement.id) >= 0\n                && tabElement.getAttribute(\"aria-disabled\") !== \"true\") {\n            const index = tabElement.parentElement.queryAll(TAB_CSS_SELECTOR).indexOf(tabElement);\n\n            this.setSelectedTabIndex(index);\n        }\n    }\n\n    /**\n     * Calculate the new height, width, and position of the tab indicator.\n     * Store the CSS values so the transition animation can start.\n     */\n    private moveIndicator({ clientHeight, clientWidth, offsetLeft, offsetTop }: HTMLElement) {\n        const indicatorWrapperStyle = {\n            height: clientHeight,\n            transform: `translateX(${Math.floor(offsetLeft)}px) translateY(${Math.floor(offsetTop)}px)`,\n            width: clientWidth,\n        };\n        this.setState({ indicatorWrapperStyle });\n    }\n\n    /**\n     * Most of the component logic lives here. We clone the children provided by the user to set up refs,\n     * accessibility attributes, and selection props correctly.\n     */\n    private getChildren() {\n        for (let unassignedTabs = this.getTabsCount() - this.tabIds.length; unassignedTabs > 0; unassignedTabs--) {\n            this.tabIds.push(generateTabId());\n            this.panelIds.push(generatePanelId());\n        }\n\n        let childIndex = 0;\n        return React.Children.map(this.props.children, (child: React.ReactElement<any>) => {\n            let result: React.ReactElement<any>;\n\n            // can be null if conditionally rendering TabList / TabPanel\n            if (child == null) {\n                return null;\n            }\n\n            if (childIndex === 0) {\n                // clone TabList / Tab elements\n                result = this.cloneTabList(child);\n            } else {\n                const tabPanelIndex = childIndex - 1;\n                const shouldRenderTabPanel = this.state.selectedTabIndex === tabPanelIndex;\n                result = shouldRenderTabPanel ? this.cloneTabPanel(child, tabPanelIndex) : null;\n            }\n\n            childIndex++;\n            return result;\n        });\n    }\n\n    private cloneTabList(child: React.ReactElement<ITabListProps & {children?: React.ReactNode}>) {\n        let tabIndex = 0;\n        const tabs = React.Children.map(child.props.children, (tab: React.ReactElement<any>) => {\n            // can be null if conditionally rendering Tab\n            if (tab == null) {\n                return null;\n            }\n\n            const clonedTab = React.cloneElement(tab, {\n                id: this.tabIds[tabIndex],\n                isSelected: this.state.selectedTabIndex === tabIndex,\n                panelId: this.panelIds[tabIndex],\n                ref: `tabs-${tabIndex}`,\n            } as ITabProps);\n            tabIndex++;\n            return clonedTab;\n        });\n        return React.cloneElement(child, {\n            children: tabs,\n            indicatorWrapperStyle: this.state.indicatorWrapperStyle,\n            ref: \"tablist\",\n        } as ITabListProps);\n    }\n\n    private cloneTabPanel(child: React.ReactElement<any>, tabIndex: number) {\n        return React.cloneElement(child, {\n            id: this.panelIds[tabIndex],\n            isSelected: this.state.selectedTabIndex === tabIndex,\n            ref: `panels-${tabIndex}`,\n            tabId: this.tabIds[tabIndex],\n        } as ITabPanelProps);\n    }\n\n    private focusTab(index: number) {\n        const ref = `tabs-${index}`;\n        const tab = findDOMNode(this.refs[ref]) as HTMLElement;\n        tab.focus();\n    }\n\n    private getFocusedTabIndex() {\n        const focusedElement = document.activeElement;\n        if (focusedElement != null && focusedElement.classList.contains(Classes.TAB)) {\n            const tabId = focusedElement.id;\n            return this.tabIds.indexOf(tabId);\n        }\n        return -1;\n    }\n\n    private getTabs() {\n        if (this.props.children == null) {\n            return [];\n        }\n        let tabs: Array<React.ReactElement<ITabProps>> = [];\n        if (React.Children.count(this.props.children) > 0) {\n            const firstChild = React.Children.toArray(this.props.children)[0] as React.ReactElement<any>;\n            if (firstChild != null) {\n                React.Children.forEach(firstChild.props.children, (tabListChild: React.ReactElement<any>) => {\n                    if (tabListChild.type === Tab) {\n                        tabs.push(tabListChild);\n                    }\n                });\n            }\n        }\n        return tabs;\n    }\n\n    private getTabsCount() {\n        return this.getTabs().length;\n    }\n\n    private getPanelsCount() {\n        if (this.props.children == null) {\n            return 0;\n        }\n\n        let index = 0;\n        let panelCount = 0;\n        React.Children.forEach(this.props.children, (child: React.ReactElement<any>) => {\n            if (child.type === TabPanel) {\n                panelCount++;\n            }\n            index++;\n        });\n\n        return panelCount;\n    }\n\n    private getStateFromProps(props: ITabsProps): ITabsState {\n        const { selectedTabIndex, initialSelectedTabIndex } = props;\n\n        if (this.isValidTabIndex(selectedTabIndex)) {\n            return { selectedTabIndex };\n        } else if (this.isValidTabIndex(initialSelectedTabIndex) && this.state.selectedTabIndex == null) {\n            return { selectedTabIndex: initialSelectedTabIndex };\n        } else {\n            return this.state;\n        }\n    }\n\n    private isTabDisabled(index: number) {\n        const tab = this.getTabs()[index];\n        return tab != null && tab.props.isDisabled;\n    }\n\n    private isValidTabIndex(index: number) {\n        return index != null && index >= 0 && index < this.getTabsCount();\n    }\n\n    /**\n     * Updates the component's state if uncontrolled and calls onChange.\n     */\n    private setSelectedTabIndex(index: number) {\n        if (index === this.state.selectedTabIndex || !this.isValidTabIndex(index)) {\n            return;\n        }\n\n        const prevSelectedIndex = this.state.selectedTabIndex;\n\n        if (this.props.selectedTabIndex == null) {\n            this.setState({\n                selectedTabIndex: index,\n            });\n        }\n\n        if (Utils.isFunction(this.props.onChange)) {\n            this.props.onChange(index, prevSelectedIndex);\n        }\n    }\n}\n\nlet tabCount = 0;\nfunction generateTabId() {\n    return `pt-tab-${tabCount++}`;\n}\n\nlet panelCount = 0;\nfunction generatePanelId() {\n    return `pt-tab-panel-${panelCount++}`;\n}\n\nexport const TabsFactory = React.createFactory(Tabs);\n"]}