{"version":3,"sources":["../src/components/button/abstractButton.tsx"],"names":[],"mappings":"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","file":"components/button/abstractButton.js","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport * as Classes from \"../../common/classes\";\nimport * as Keys from \"../../common/keys\";\nimport { IActionProps } from \"../../common/props\";\nimport { safeInvoke } from \"../../common/utils\";\nimport { Spinner } from \"../spinner/spinner\";\n\nexport interface IButtonProps extends IActionProps {\n    /** A ref handler that receives the native HTML element backing this component. */\n    elementRef?: (ref: HTMLElement) => any;\n\n    /** Name of icon (the part after `pt-icon-`) to add to button. */\n    rightIconName?: string;\n\n    /**\n     * If set to true, the button will display a centered loading spinner instead of its contents.\n     * The width of the button is not affected by the value of this prop.\n     * @default false\n     */\n    loading?: boolean;\n\n    /**\n     * HTML `type` attribute of button. Common values are `\"button\"` and `\"submit\"`.\n     * Note that this prop has no effect on `AnchorButton`; it only affects `Button`.\n     * @default \"button\"\n     */\n    type?: string;\n}\n\nexport interface IButtonState {\n    isActive: boolean;\n}\n\nexport abstract class AbstractButton<T> extends React.Component<React.HTMLProps<T> & IButtonProps, IButtonState> {\n    public state = {\n        isActive: false,\n    };\n\n    protected buttonRef: HTMLElement;\n    protected refHandlers = {\n        button: (ref: HTMLElement) => {\n            this.buttonRef = ref;\n            safeInvoke(this.props.elementRef, ref);\n        },\n    };\n\n    private currentKeyDown: number = null;\n\n    public abstract render(): JSX.Element;\n\n    protected getCommonButtonProps() {\n        const disabled = this.props.disabled || this.props.loading;\n\n        const className = classNames(\n            Classes.BUTTON,\n            {\n                [Classes.ACTIVE]: this.state.isActive,\n                [Classes.DISABLED]: disabled,\n                [Classes.LOADING]: this.props.loading,\n            },\n            Classes.iconClass(this.props.iconName),\n            Classes.intentClass(this.props.intent),\n            this.props.className,\n        );\n\n        return {\n            className,\n            disabled,\n            onClick: disabled ? undefined : this.props.onClick,\n            onKeyDown: this.handleKeyDown,\n            onKeyUp: this.handleKeyUp,\n            ref: this.refHandlers.button,\n        };\n    }\n\n    // we're casting as `any` to get around a somewhat opaque safeInvoke error\n    // that \"Type argument candidate 'KeyboardEvent<T>' is not a valid type\n    // argument because it is not a supertype of candidate\n    // 'KeyboardEvent<HTMLElement>'.\"\n    protected handleKeyDown = (e: React.KeyboardEvent<any>) => {\n        if (isKeyboardClick(e.which)) {\n            e.preventDefault();\n            if (e.which !== this.currentKeyDown) {\n                this.setState({ isActive: true });\n            }\n        }\n        this.currentKeyDown = e.which;\n        safeInvoke(this.props.onKeyDown, e);\n    }\n\n    protected handleKeyUp = (e: React.KeyboardEvent<any>) => {\n        if (isKeyboardClick(e.which)) {\n            this.setState({ isActive: false });\n            this.buttonRef.click();\n        }\n        this.currentKeyDown = null;\n        safeInvoke(this.props.onKeyUp, e);\n    }\n\n    protected renderChildren(): React.ReactNode {\n        const { loading, rightIconName, text } = this.props;\n        const iconClasses = classNames(Classes.ICON_STANDARD, Classes.iconClass(rightIconName), Classes.ALIGN_RIGHT);\n\n        const children = React.Children.map(this.props.children, (child, index) => {\n            // must wrap string children in spans so loading prop can hide them\n            if (typeof child === \"string\") {\n                return <span key={`text-${index}`}>{child}</span>;\n            }\n            return child;\n        });\n\n        return [\n            loading ? <Spinner className=\"pt-small pt-button-spinner\" key=\"spinner\" /> : undefined,\n            text != null ? <span key=\"text\">{text}</span> : undefined,\n            children,\n            rightIconName != null ? <span className={iconClasses} key=\"icon\" /> : undefined,\n        ];\n    }\n}\n\nfunction isKeyboardClick(keyCode: number) {\n    return keyCode === Keys.ENTER || keyCode === Keys.SPACE;\n}\n"]}