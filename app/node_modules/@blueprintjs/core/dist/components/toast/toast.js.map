{"version":3,"sources":["../src/components/toast/toast.tsx"],"names":[],"mappings":"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","file":"components/toast/toast.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as PureRender from \"pure-render-decorator\";\nimport * as React from \"react\";\n\nimport { AbstractComponent } from \"../../common/abstractComponent\";\nimport * as Classes from \"../../common/classes\";\nimport { IActionProps, IIntentProps, ILinkProps, IProps } from \"../../common/props\";\nimport { safeInvoke } from \"../../common/utils\";\nimport { AnchorButton, Button } from \"../button/buttons\";\n\nexport interface IToastProps extends IProps, IIntentProps {\n    /**\n     * Action rendered as a minimal `AnchorButton`. The toast is dismissed automatically when the\n     * user clicks the action button. Note that the `intent` prop is ignored (the action button\n     * cannot have its own intent color that might conflict with the toast's intent). Omit this\n     * prop to omit the action button.\n     */\n    action?: IActionProps & ILinkProps;\n\n    /** Name of icon to appear before message. Specify only the part of the name after `pt-icon-`. */\n    iconName?: string;\n\n    /** Message to display in the body of the toast. */\n    message: string | JSX.Element;\n\n    /**\n     * Callback invoked when the toast is dismissed, either by the user or by the timeout.\n     * The value of the argument indicates whether the toast was closed because the timeout expired.\n     */\n    onDismiss?: (didTimeoutExpire: boolean) => void;\n\n    /**\n     * Milliseconds to wait before automatically dismissing toast.\n     * Providing a value <= 0 will disable the timeout (this is discouraged).\n     * @default 5000\n     */\n    timeout?: number;\n}\n\n@PureRender\nexport class Toast extends AbstractComponent<IToastProps, {}> {\n    public static defaultProps: IToastProps = {\n        className: \"\",\n        message: \"\",\n        timeout: 5000,\n    };\n\n    public displayName = \"Blueprint.Toast\";\n\n    public render(): JSX.Element {\n        const { className, intent, message } = this.props;\n        return (\n            <div\n                className={classNames(Classes.TOAST, Classes.intentClass(intent), className)}\n                onBlur={this.startTimeout}\n                onFocus={this.clearTimeouts}\n                onMouseEnter={this.clearTimeouts}\n                onMouseLeave={this.startTimeout}\n                tabIndex={0}\n            >\n                {this.maybeRenderIcon()}\n                <span className={Classes.TOAST_MESSAGE}>{message}</span>\n                <div className={classNames(Classes.BUTTON_GROUP, Classes.MINIMAL)}>\n                    {this.maybeRenderActionButton()}\n                    <Button iconName=\"cross\" onClick={this.handleCloseClick} />\n                </div>\n            </div>\n        );\n    }\n\n    public componentDidMount() {\n        this.startTimeout();\n    }\n\n    public componentDidUpdate(prevProps: IToastProps) {\n        if (prevProps.timeout <= 0 && this.props.timeout > 0) {\n            this.startTimeout();\n        } else if (prevProps.timeout > 0 && this.props.timeout <= 0) {\n            this.clearTimeouts();\n        }\n    }\n\n    public componentWillUnmount() {\n        this.clearTimeouts();\n    }\n\n    private maybeRenderActionButton() {\n        const { action } = this.props;\n        if (action == null) {\n            return undefined;\n        } else {\n            return <AnchorButton {...action} intent={undefined} onClick={this.handleActionClick} />;\n        }\n    }\n\n    private maybeRenderIcon() {\n        const { iconName } = this.props;\n        if (iconName == null) {\n            return undefined;\n        } else {\n            return <span className={classNames(Classes.ICON_STANDARD, Classes.iconClass(iconName))} />;\n        }\n    }\n\n    private handleActionClick = (e: React.MouseEvent<HTMLElement>) => {\n        safeInvoke(this.props.action.onClick, e);\n        this.triggerDismiss(false);\n    }\n\n    private handleCloseClick = () => this.triggerDismiss(false);\n\n    private triggerDismiss(didTimeoutExpire: boolean) {\n        safeInvoke(this.props.onDismiss, didTimeoutExpire);\n        this.clearTimeouts();\n    }\n\n    private startTimeout = () => {\n        if (this.props.timeout > 0) {\n            this.setTimeout(() => this.triggerDismiss(true), this.props.timeout);\n        }\n    }\n}\n\nexport const ToastFactory = React.createFactory(Toast);\n"]}