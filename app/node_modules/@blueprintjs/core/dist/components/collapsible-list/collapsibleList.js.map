{"version":3,"sources":["../src/components/collapsible-list/collapsibleList.tsx"],"names":[],"mappings":"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","file":"components/collapsible-list/collapsibleList.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport { Position } from \"../../common/position\";\nimport { IProps } from \"../../common/props\";\nimport { Menu } from \"../menu/menu\";\nimport { IMenuItemProps, MenuItem } from \"../menu/menuItem\";\nimport { IPopoverProps, Popover } from \"../popover/popover\";\n\ntype CollapsibleItem = React.ReactElement<IMenuItemProps>;\n\nexport enum CollapseFrom {\n    START,\n    END,\n}\n\nexport interface ICollapsibleListProps extends IProps {\n    /**\n     * Element to render as dropdown target with `CLICK` interaction to show collapsed menu.\n     */\n    dropdownTarget: JSX.Element;\n\n    /**\n     * Props to pass to the dropdown popover.\n     */\n    dropdownProps?: IPopoverProps;\n\n    /**\n     * Callback invoked to render each visible item. The item will be wrapped in an `li` with\n     * the optional `visibleItemClassName` prop.\n     */\n    renderVisibleItem: (props: IMenuItemProps, index: number) => JSX.Element;\n\n    /**\n     * Which direction the items should collapse from: start or end of the children.\n     * @default CollapseFrom.START\n     */\n    collapseFrom?: CollapseFrom;\n\n    /**\n     * CSS class names to add to `<li>` tags containing each visible item and the dropdown.\n     */\n    visibleItemClassName?: string;\n\n    /**\n     * Exact number of visible items.\n     * @default 3\n     */\n    visibleItemCount?: number;\n}\n\nexport class CollapsibleList extends React.Component<ICollapsibleListProps, {}> {\n    public static displayName = \"Blueprint.CollapsibleList\";\n\n    public static defaultProps: ICollapsibleListProps = {\n        collapseFrom: CollapseFrom.START,\n        dropdownTarget: null,\n        renderVisibleItem: null,\n        visibleItemCount: 3,\n    };\n\n    public render() {\n        const { collapseFrom } = this.props;\n        const childrenLength = React.Children.count(this.props.children);\n        const [visibleChildren, collapsedChildren] = this.partitionChildren();\n\n        const visibleItems = visibleChildren.map((child: CollapsibleItem, index: number) => {\n            const absoluteIndex = (collapseFrom === CollapseFrom.START ? childrenLength - 1 - index : index);\n            return (\n                <li className={this.props.visibleItemClassName} key={absoluteIndex}>\n                    {this.props.renderVisibleItem(child.props, absoluteIndex)}\n                </li>\n            );\n        });\n        if (collapseFrom === CollapseFrom.START) {\n            // reverse START list so separators appear before items\n            visibleItems.reverse();\n        }\n\n        // construct dropdown menu for collapsed items\n        let collapsedPopover: JSX.Element;\n        if (collapsedChildren.length > 0) {\n            const position = (collapseFrom === CollapseFrom.END ? Position.BOTTOM_RIGHT : Position.BOTTOM_LEFT);\n            collapsedPopover = (\n                <li className={this.props.visibleItemClassName}>\n                    <Popover\n                        content={<Menu>{collapsedChildren}</Menu>}\n                        position={position}\n                        {...this.props.dropdownProps}\n                    >\n                        {this.props.dropdownTarget}\n                    </Popover>\n                </li>\n            );\n        }\n\n        return (\n            <ul className={classNames(Classes.COLLAPSIBLE_LIST, this.props.className)}>\n                {collapseFrom === CollapseFrom.START ? collapsedPopover : null}\n                {visibleItems}\n                {collapseFrom === CollapseFrom.END ? collapsedPopover : null}\n            </ul>\n        );\n    }\n\n    // splits the list of children into two arrays: visible and collapsed\n    private partitionChildren(): [CollapsibleItem[], CollapsibleItem[]] {\n        if (this.props.children == null) {\n            return [[], []];\n        }\n        const childrenArray = React.Children.map(this.props.children, (child: JSX.Element, index: number) => {\n            if (child.type !== MenuItem) {\n                throw new Error(Errors.COLLAPSIBLE_LIST_INVALID_CHILD);\n            }\n            return React.cloneElement(child, { key: `visible-${index}` });\n        });\n        if (this.props.collapseFrom === CollapseFrom.START) {\n            // reverse START list so we can always slice visible items from the front of the list\n            childrenArray.reverse();\n        }\n        const { visibleItemCount } = this.props;\n        return [\n            childrenArray.slice(0, visibleItemCount),\n            childrenArray.slice(visibleItemCount),\n        ];\n    }\n}\n\nexport const CollapsibleListFactory = React.createFactory(CollapsibleList);\n"]}