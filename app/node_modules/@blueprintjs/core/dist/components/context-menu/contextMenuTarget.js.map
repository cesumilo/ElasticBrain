{"version":3,"sources":["../src/components/context-menu/contextMenuTarget.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;AAEH,6BAA+B;AAE/B,4CAA4D;AAC5D,2CAA6C;AAO7C,2BAA+E,WAAc;IACnF,IAAA,0BAAyE,EAAvE,kBAAM,EAAE,wCAAiB,EAAE,0CAAkB,CAA2B;IAEhF,EAAE,CAAC,CAAC,CAAC,kBAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,IAAI,KAAK,CAAC,4EAA4E,WAAa,CAAC,CAAC;IAC/G,CAAC;IAED,kEAAkE;IAClE,gDAAgD;IAChD,WAAW,CAAC,SAAS,CAAC,MAAM,GAAG;QAAA,iBA2B9B;QA1BG,oCAAoC;QACpC,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAgB,CAAC;QAEjD,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,0FAA0F;YAC1F,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QAED,IAAM,gBAAgB,GAAG,OAAO,CAAC,KAAK,CAAC,aAAqD,CAAC;QAC7F,IAAM,aAAa,GAAG,UAAC,CAAgC;YACnD,8EAA8E;YAC9E,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC;YACX,CAAC;YAED,IAAM,IAAI,GAAG,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACvC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACf,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE,kBAAkB,CAAC,CAAC;YACpF,CAAC;YAED,kBAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC;QAEF,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,aAAa,eAAA,EAAE,CAAC,CAAC;QACtD,mCAAmC;IACvC,CAAC,CAAC;AACN,CAAC;AArCD,8CAqCC;AAAA,CAAC","file":"components/context-menu/contextMenuTarget.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as React from \"react\";\n\nimport { isFunction, safeInvoke } from \"../../common/utils\";\nimport * as ContextMenu from \"./contextMenu\";\n\nexport interface IContextMenuTarget extends React.Component<any, any> {\n    renderContextMenu(e: React.MouseEvent<HTMLElement>): JSX.Element ;\n    onContextMenuClose?(): void;\n}\n\nexport function ContextMenuTarget<T extends { prototype: IContextMenuTarget }>(constructor: T) {\n    const { render, renderContextMenu, onContextMenuClose } = constructor.prototype;\n\n    if (!isFunction(renderContextMenu)) {\n        throw new Error(`@ContextMenuTarget-decorated class must implement \\`renderContextMenu\\`. ${constructor}`);\n    }\n\n    // patching classes like this requires preserving function context\n    // tslint:disable-next-line only-arrow-functions\n    constructor.prototype.render = function(this: IContextMenuTarget) {\n        /* tslint:disable:no-invalid-this */\n        const element = render.call(this) as JSX.Element;\n\n        if (element == null) {\n            // always return `element` in case caller is distinguishing between `null` and `undefined`\n            return element;\n        }\n\n        const oldOnContextMenu = element.props.onContextMenu as React.MouseEventHandler<HTMLElement>;\n        const onContextMenu = (e: React.MouseEvent<HTMLElement>) => {\n            // support nested menus (inner menu target would have called preventDefault())\n            if (e.defaultPrevented) {\n                return;\n            }\n\n            const menu = this.renderContextMenu(e);\n            if (menu != null) {\n                e.preventDefault();\n                ContextMenu.show(menu, { left: e.clientX, top: e.clientY }, onContextMenuClose);\n            }\n\n            safeInvoke(oldOnContextMenu, e);\n        };\n\n        return React.cloneElement(element, { onContextMenu });\n        /* tslint:enable:no-invalid-this */\n    };\n};\n"]}