{"version":3,"sources":["../src/components/tag/tag.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;AAEH,uCAAyC;AACzC,kDAAoD;AACpD,6BAA+B;AAE/B,4CAA8E;AAC9E,4CAAgD;AAEhD,8CAAgD;AAWhD,IAAa,GAAG;IAAS,+BAA8B;IADvD;QAAA,qEAmBC;QAjBU,iBAAW,GAAG,eAAe,CAAC;;IAiBzC,CAAC;IAfU,oBAAM,GAAb;QACU,IAAA,eAA4C,EAA1C,wBAAS,EAAE,kBAAM,EAAE,sBAAQ,CAAgB;QACnD,IAAM,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC;YAClE,GAAC,OAAO,CAAC,aAAa,IAAG,QAAQ,IAAI,IAAI;iBAC1C,SAAS,CAAC,CAAC;QACd,IAAM,MAAM,GACV,kBAAU,CAAC,QAAQ,CAAC,GAAG,gCAAQ,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAE,OAAO,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,GAAI,GAAG,SAAS,CAAC;QAEhH,MAAM,CAAC,CACH,iDAAU,0BAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAE,SAAS,EAAE,UAAU;YAC1D,IAAI,CAAC,KAAK,CAAC,QAAQ;YACnB,MAAM,CACJ,CACV,CAAC;;IACN,CAAC;IACL,UAAC;AAAD,CAlBA,AAkBC,CAlBwB,KAAK,CAAC,SAAS,GAkBvC;AAlBY,GAAG;IADf,UAAU;GACE,GAAG,CAkBf;AAlBY,kBAAG;AAoBH,QAAA,UAAU,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC","file":"components/tag/tag.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as PureRender from \"pure-render-decorator\";\nimport * as React from \"react\";\n\nimport { IIntentProps, IProps, removeNonHTMLProps } from \"../../common/props\";\nimport { isFunction } from \"../../common/utils\";\n\nimport * as Classes from \"../../common/classes\";\n\nexport interface ITagProps extends IProps, IIntentProps, React.HTMLProps<HTMLSpanElement> {\n    /**\n     * Click handler for remove button.\n     * Button will only be rendered if this prop is defined.\n     */\n    onRemove?: (e: React.MouseEvent<HTMLSpanElement>) => void;\n}\n\n@PureRender\nexport class Tag extends React.Component<ITagProps, {}> {\n    public displayName = \"Blueprint.Tag\";\n\n    public render() {\n        const { className, intent, onRemove } = this.props;\n        const tagClasses = classNames(Classes.TAG, Classes.intentClass(intent), {\n            [Classes.TAG_REMOVABLE]: onRemove != null,\n        }, className);\n        const button =\n          isFunction(onRemove) ? <button type=\"button\" className={Classes.TAG_REMOVE} onClick={onRemove} /> : undefined;\n\n        return (\n            <span {...removeNonHTMLProps(this.props)} className={tagClasses}>\n                {this.props.children}\n                {button}\n            </span>\n        );\n    }\n}\n\nexport const TagFactory = React.createFactory(Tag);\n"]}